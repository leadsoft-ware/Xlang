Xlang Compiler Alpha 0.1
Powered by xiaokang00010
Filename -> ./test.xlang
Reading Program to buffer.../*
This is a test file for Xlang compiler
Writed by xiaokang00010 at Febuary,12th,2021
*/
// for testing
import(headers:"lib/vmlib@latest/io.xlang");

func int main(){
	char s[16];
	ptr_char f=&s;
};
main();

--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->7
--->[reg0]
--->8
--->reg1
--->regsb
--->reg1
--->regfp
--->reg1
--->15
--->reg0
--->[reg1]
--->reg0
--->[reg0]
beforce:   \n
processed: 

--->reg1
--->10
--->reg1
--->reg1
--->reg0
--->reg1
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->15
--->reg0
--->[reg0]
--->0
--->[reg0]
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->15
--->reg1
--->regsb
--->reg1
--->regfp
--->reg1
--->15
--->reg2
--->1
--->reg1
--->[reg1]
--->reg1
--->reg2
--->[reg0]
--->reg1
--->8
--->2
--->17
--->reg0
--->1
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->regsp
--->reg0
--->1
--->[reg0]
--->8
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->7
--->[reg0]
--->8
--->reg1
--->regsb
--->reg1
--->regfp
--->reg1
--->15
--->reg0
--->[reg1]
--->reg0
--->[reg0]
beforce:   \0
processed: 
--->reg1
--->0
--->reg1
--->reg1
--->reg0
--->reg1
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->15
--->reg0
--->[reg0]
--->0
--->[reg0]
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->15
--->reg1
--->regsb
--->reg1
--->regfp
--->reg1
--->15
--->reg2
--->1
--->reg1
--->[reg1]
--->reg1
--->reg2
--->[reg0]
--->reg1
--->8
--->2
--->17
--->reg0
--->1
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->regsp
--->reg0
--->1
--->[reg0]
--->8
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->7
--->[reg0]
--->8
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->15
--->reg1
--->1
--->reg0
--->[reg0]
--->reg0
--->reg1
--->reg0
--->[reg0]
beforce:   \n
processed: 

--->reg1
--->10
--->reg1
--->reg1
--->reg0
--->reg1
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->15
--->reg0
--->[reg0]
--->0
--->[reg0]
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->15
--->reg1
--->regsb
--->reg1
--->regfp
--->reg1
--->15
--->reg2
--->1
--->reg1
--->[reg1]
--->reg1
--->reg2
--->[reg0]
--->reg1
--->8
--->2
--->17
--->reg0
--->1
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->regsp
--->reg0
--->1
--->[reg0]
--->8
--->regfp
--->_main_int
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->regsp
--->reg0
--->1
--->regsp
--->16
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->15
--->reg0
--->8
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->7
--->[reg0]
--->8
--->reg1
--->regsb
--->reg1
--->regfp
--->reg1
--->15
--->reg0
--->[reg1]
--->reg0
--->[reg0]
beforce:   \n
processed: 

--->reg1
--->10
--->reg1
--->reg1
--->reg0
--->reg1
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->15
--->reg0
--->[reg0]
--->0
--->[reg0]
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->15
--->reg1
--->regsb
--->reg1
--->regfp
--->reg1
--->15
--->reg2
--->1
--->reg1
--->[reg1]
--->reg1
--->reg2
--->[reg0]
--->reg1
--->8
--->2
--->17
--->reg0
--->1
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->regsp
--->reg0
--->1
--->[reg0]
--->8
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->7
--->[reg0]
--->8
--->reg1
--->regsb
--->reg1
--->regfp
--->reg1
--->15
--->reg0
--->[reg1]
--->reg0
--->[reg0]
beforce:   \0
processed: 
--->reg1
--->0
--->reg1
--->reg1
--->reg0
--->reg1
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->15
--->reg0
--->[reg0]
--->0
--->[reg0]
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->15
--->reg1
--->regsb
--->reg1
--->regfp
--->reg1
--->15
--->reg2
--->1
--->reg1
--->[reg1]
--->reg1
--->reg2
--->[reg0]
--->reg1
--->8
--->2
--->17
--->reg0
--->1
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->regsp
--->reg0
--->1
--->[reg0]
--->8
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->7
--->[reg0]
--->8
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->15
--->reg1
--->1
--->reg0
--->[reg0]
--->reg0
--->reg1
--->reg0
--->[reg0]
beforce:   \n
processed: 

--->reg1
--->10
--->reg1
--->reg1
--->reg0
--->reg1
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->15
--->reg0
--->[reg0]
--->0
--->[reg0]
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->15
--->reg1
--->regsb
--->reg1
--->regfp
--->reg1
--->15
--->reg2
--->1
--->reg1
--->[reg1]
--->reg1
--->reg2
--->[reg0]
--->reg1
--->8
--->2
--->17
--->reg0
--->1
--->reg0
--->regsb
--->reg0
--->regfp
--->reg0
--->regsp
--->reg0
--->1
--->[reg0]
--->8
[32m_vmstart:[0m
save;
sub regfp,0;
call _main_int;
mov reg0,regsb;
sub reg0,regfp;
sub reg0,regsp;
add reg0,1;
exit;
[32m_main_int:[0m
add regsp,16;
mov reg0,regsb;
sub reg0,regfp;
sub reg0,15;
push reg0,8;
[32m_printLine_int:[0m
mov reg0,regsb;
sub reg0,regfp;
sub reg0,7;
push [reg0],8;
mov reg1,regsb;
sub reg1,regfp;
sub reg1,15;
mov reg0,[reg1];
push1b reg0,[reg0];
mov reg1,10;
push1b reg1,reg1;
neq reg0,reg1;
jt 2;
jf 17;
mov reg0,regsb;
sub reg0,regfp;
sub reg0,15;
mov reg0,[reg0];
out 0,[reg0];
mov reg0,regsb;
sub reg0,regfp;
sub reg0,15;
mov reg1,regsb;
sub reg1,regfp;
sub reg1,15;
mov reg2,1;
mov reg1,[reg1];
add reg1,reg2;
mov_m [reg0],reg1,8;
jmp -25;
mov reg0,1;
push reg0,8;
mov reg0,regsb;
sub reg0,regfp;
sub reg0,regsp;
add reg0,1;
ret [reg0],8;
[32m_print_int:[0m
mov reg0,regsb;
sub reg0,regfp;
sub reg0,7;
push [reg0],8;
mov reg1,regsb;
sub reg1,regfp;
sub reg1,15;
mov reg0,[reg1];
push1b reg0,[reg0];
mov reg1,0;
push1b reg1,reg1;
neq reg0,reg1;
jt 2;
jf 17;
mov reg0,regsb;
sub reg0,regfp;
sub reg0,15;
mov reg0,[reg0];
out 0,[reg0];
mov reg0,regsb;
sub reg0,regfp;
sub reg0,15;
mov reg1,regsb;
sub reg1,regfp;
sub reg1,15;
mov reg2,1;
mov reg1,[reg1];
add reg1,reg2;
mov_m [reg0],reg1,8;
jmp -25;
mov reg0,1;
push reg0,8;
mov reg0,regsb;
sub reg0,regfp;
sub reg0,regsp;
add reg0,1;
ret [reg0],8;
[32m_readLine_int:[0m
mov reg0,regsb;
sub reg0,regfp;
sub reg0,7;
push [reg0],8;
mov reg0,regsb;
sub reg0,regfp;
sub reg0,15;
mov reg1,1;
mov reg0,[reg0];
sub reg0,reg1;
push1b reg0,[reg0];
mov reg1,10;
push1b reg1,reg1;
neq reg0,reg1;
jt 2;
jf 17;
mov reg0,regsb;
sub reg0,regfp;
sub reg0,15;
mov reg0,[reg0];
in 0,[reg0];
mov reg0,regsb;
sub reg0,regfp;
sub reg0,15;
mov reg1,regsb;
sub reg1,regfp;
sub reg1,15;
mov reg2,1;
mov reg1,[reg1];
add reg1,reg2;
mov_m [reg0],reg1,8;
jmp -27;
mov reg0,1;
push reg0,8;
mov reg0,regsb;
sub reg0,regfp;
sub reg0,regsp;
add reg0,1;
ret [reg0],8;

